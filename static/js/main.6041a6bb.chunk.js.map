{"version":3,"sources":["contexts/TodosContext.js","components/Todo/Todo.js","components/TodoList/TodoList.js","components/TodoForm/TodoForm.js","App.js","index.js"],"names":["TodoListContext","createContext","TodoListContextProvider","props","initialState","JSON","parse","localStorage","getItem","useState","todos","setTodos","useEffect","setItem","stringify","editItem","setEditItem","Provider","value","addTodo","title","id","uuid","deleteTodo","filter","todo","clearTodos","findItem","item","find","editTodo","newTodos","map","children","Todo","useContext","className","onClick","TodoList","length","key","TodoForm","setTitle","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","App","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAkBC,0BAuDhBC,EArDiB,SAAAC,GAC9B,IAAMC,EAAeC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAD3B,EAGbC,mBAASL,GAHI,mBAGhCM,EAHgC,KAGzBC,EAHyB,KAKvCC,qBAAU,WACRL,aAAaM,QAAQ,QAASR,KAAKS,UAAUJ,MAC5C,CAACA,IAPmC,MASPD,mBAAS,MATF,mBAShCM,EATgC,KAStBC,EATsB,KAoCvC,OACE,kBAAChB,EAAgBiB,SAAjB,CACEC,MAAO,CACLR,QACAS,QA7BU,SAAAC,GACdT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEU,QAAOC,GAAIC,WA6B7BC,WA1Ba,SAAAF,GACjBV,EAASD,EAAMc,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,KAAOA,OA0BtCK,WAvBa,WACjBf,EAAS,KAuBLgB,SApBW,SAAAN,GACf,IAAMO,EAAOlB,EAAMmB,MAAK,SAAAJ,GAAI,OAAIA,EAAKJ,KAAOA,KAE5CL,EAAYY,IAkBRE,SAfW,SAACV,EAAOC,GACvB,IAAMU,EAAWrB,EAAMsB,KAAI,SAAAP,GAAI,OAAKA,EAAKJ,KAAOA,EAAK,CAAED,QAAOC,MAAOI,KAErEd,EAASoB,GACTf,EAAY,OAYRD,aAGDZ,EAAM8B,WClDAC,EAAO,SAAC,GAAc,IAAZT,EAAW,EAAXA,KAAW,EACCU,qBAAWnC,GAApCuB,EADwB,EACxBA,WAAYI,EADY,EACZA,SACpB,OACE,wBAAIS,UAAU,WACZ,8BAAOX,EAAKL,MAAZ,KACA,6BACE,4BACEgB,UAAU,4BACVC,QAAS,kBAAMd,EAAWE,EAAKJ,MAE/B,uBAAGe,UAAU,yBACL,IACV,4BAAQA,UAAU,0BAA0BC,QAAS,kBAAMV,EAASF,EAAKJ,MACzE,uBAAGe,UAAU,oBCZRE,EAAW,WAAO,IACrB5B,EAAUyB,qBAAWnC,GAArBU,MAER,OACE,6BACGA,EAAM6B,OACL,wBAAIH,UAAU,MACX1B,EAAMsB,KAAI,SAAAP,GACT,OAAO,kBAAC,EAAD,CAAMA,KAAMA,EAAMe,IAAKf,EAAKJ,SAIvC,yBAAKe,UAAU,YAAf,cCbKK,EAAW,WAAO,IAAD,EACwBN,qBAAWnC,GAAvDmB,EADoB,EACpBA,QAASO,EADW,EACXA,WAAYI,EADD,EACCA,SAAUf,EADX,EACWA,SADX,EAEFN,mBAAS,IAFP,mBAErBW,EAFqB,KAEdsB,EAFc,KA0B5B,OARA9B,qBAAU,WAEN8B,EADE3B,EACOA,EAASK,MAET,MAEV,CAACL,IAGF,0BAAM4B,SAvBa,SAAAC,GACnBA,EAAEC,iBACG9B,EAIHe,EAASV,EAAOL,EAASM,KAHzBF,EAAQC,GACRsB,EAAS,MAmBmBN,UAAU,QACtC,2BACEU,KAAK,OACLC,YAAY,oBACZ7B,MAAOE,EACP4B,SAlBe,SAAAJ,GACnBF,EAASE,EAAEK,OAAO/B,QAkBdgC,UAAQ,EACRd,UAAU,eAEZ,yBAAKA,UAAU,WACb,4BAAQU,KAAK,SAASV,UAAU,0BAC7BrB,EAAW,YAAc,YAE5B,4BAAQqB,UAAU,sBAAsBC,QAASX,GAAjD,YCjBOyB,G,MAlBH,WACV,OACE,kBAAC,EAAD,KACE,yBAAKf,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,0CAEF,yBAAKA,UAAU,SACb,kBAAC,EAAD,MACA,kBAAC,EAAD,YCdZgB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6041a6bb.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport uuid from 'uuid';\n\nexport const TodoListContext = createContext();\n\nconst TodoListContextProvider = props => {\n  const initialState = JSON.parse(localStorage.getItem('tasks')) || [];\n\n  const [todos, setTodos] = useState(initialState);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const [editItem, setEditItem] = useState(null);\n\n  const addTodo = title => {\n    setTodos([...todos, { title, id: uuid() }]);\n  };\n\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const clearTodos = () => {\n    setTodos([]);\n  };\n\n  const findItem = id => {\n    const item = todos.find(todo => todo.id === id);\n\n    setEditItem(item);\n  };\n\n  const editTodo = (title, id) => {\n    const newTodos = todos.map(todo => (todo.id === id ? { title, id } : todo));\n\n    setTodos(newTodos);\n    setEditItem(null);\n  };\n\n  return (\n    <TodoListContext.Provider\n      value={{\n        todos,\n        addTodo,\n        deleteTodo,\n        clearTodos,\n        findItem,\n        editTodo,\n        editItem\n      }}\n    >\n      {props.children}\n    </TodoListContext.Provider>\n  )\n}\n\nexport default TodoListContextProvider\n","import React, { useContext } from 'react';\nimport { TodoListContext } from '../../contexts/TodosContext';\n\nexport const Todo = ({ todo }) => {\n  const { deleteTodo, findItem } = useContext(TodoListContext)\n  return (\n    <li className=\"li-item\">\n      <span>{todo.title} </span>\n      <div>\n        <button\n          className=\"button-delete todo-button\"\n          onClick={() => deleteTodo(todo.id)}\n        >\n          <i className=\"fas fa-times-circle\"></i>\n        </button>{' '}\n        <button className=\"button-edit todo-button\" onClick={() => findItem(todo.id)}>\n        <i className=\"far fa-edit\"></i>\n        </button>\n      </div>\n    </li>\n  )\n}\n\n","import React, { useContext } from \"react\";\nimport { TodoListContext } from \"../../contexts/TodosContext\";\nimport { Todo } from \"../Todo\";\n\nexport const TodoList = () => {\n  const { todos } = useContext(TodoListContext);\n\n  return (\n    <div>\n      {todos.length ? (\n        <ul className=\"li\">\n          {todos.map(todo => {\n            return <Todo todo={todo} key={todo.id} />;\n          })}\n        </ul>\n      ) : (\n        <div className=\"no-todos\">No Todos</div>\n      )}\n    </div>\n  );\n};\n\n\n","import React, { useState, useContext, useEffect } from 'react';\nimport { TodoListContext } from '../../contexts/TodosContext';\n\nexport const TodoForm = () => {\n  const { addTodo, clearTodos, editTodo, editItem } = useContext(TodoListContext);\n  const [title, setTitle] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!editItem) {\n      addTodo(title);\n      setTitle('');\n    } else {\n      editTodo(title, editItem.id);\n    }\n  }\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  }\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title);\n    } else {\n      setTitle('');\n    }\n  }, [editItem]);\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <input\n        type=\"text\"\n        placeholder=\"Add a new Todo...\"\n        value={title}\n        onChange={handleChange}\n        required\n        className=\"todo-input\"\n      />\n      <div className=\"buttons\">\n        <button type=\"submit\" className=\"button add-todo-button\">\n          {editItem ? 'Edit Todo' : 'Add Todo'}\n        </button>\n        <button className=\"button clear-button\" onClick={clearTodos}>\n          Clear\n        </button>\n      </div>\n    </form>\n  )\n}\n\n","import React from \"react\";\nimport TodoListContextProvider from \"./contexts/TodosContext\";\nimport { TodoList } from \"./components/TodoList/TodoList\";\nimport { TodoForm } from \"./components/TodoForm/TodoForm\";\n\nimport \"./App.css\";\n\n\nconst App = () => {\n  return (\n    <TodoListContextProvider>\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <div className='header'>\n            <h1>TODO LIST</h1>\n          </div>\n          <div className=\"block\">\n            <TodoForm />\n            <TodoList />\n          </div>\n        </div>\n      </div>\n    </TodoListContextProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}